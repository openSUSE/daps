# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Copyright (C) 2012-2015 SUSE Linux GmbH
#
# Author:
# Frank Sundermeyer <fsundermeyer at opensuse dot org>
#
# Makefile.am for DocBook Authoring and Publishing Suite (daps)
# Generate catalogs and install daps
#
#
# TODO: 
# Stylesheets for building xhtml need to be packaged in src tar


VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_python_module.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(dist_bin_SCRIPTS) \
	$(dist_dapslibexec_SCRIPTS) $(am__dist_catalog_DATA_DIST) \
	$(dist_dapsconf_DATA) $(dist_dapslib_DATA) \
	$(dist_dapsmake_DATA) $(dist_doc_DATA) $(dist_emacssite_DATA) \
	$(dist_fopconf_DATA) $(dist_hyphen_DATA) $(dist_template_DATA) \
	$(dist_xepconf_DATA) $(dist_xsltcommon_DATA) \
	$(dist_xsltcontrib_DATA) $(dist_xsltdesktop_DATA) \
	$(dist_xsltepub_DATA) $(dist_xsltindex_DATA) \
	$(dist_xsltjsp_DATA) $(dist_xsltlib_DATA) \
	$(dist_xsltmallard_DATA) $(dist_xsltmigrate_DATA) \
	$(dist_xsltprofiling_DATA) $(dist_xsltrelnotes_DATA) \
	$(dist_xsltxhtml_DATA) $(dist_xsltyelp_DATA) \
	$(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES = doc/xml/entity-decl.ent
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(dapslibexecdir)" \
	"$(DESTDIR)$(man1dir)" "$(DESTDIR)$(catalogdir)" \
	"$(DESTDIR)$(dapsconfdir)" "$(DESTDIR)$(dapslibdir)" \
	"$(DESTDIR)$(dapsmakedir)" "$(DESTDIR)$(docdir)" \
	"$(DESTDIR)$(emacssitedir)" "$(DESTDIR)$(fopconfdir)" \
	"$(DESTDIR)$(hyphendir)" "$(DESTDIR)$(templatedir)" \
	"$(DESTDIR)$(xepconfdir)" "$(DESTDIR)$(xsltcommondir)" \
	"$(DESTDIR)$(xsltcontribdir)" "$(DESTDIR)$(xsltdesktopdir)" \
	"$(DESTDIR)$(xsltepubdir)" "$(DESTDIR)$(xsltindexdir)" \
	"$(DESTDIR)$(xsltjspdir)" "$(DESTDIR)$(xsltlibdir)" \
	"$(DESTDIR)$(xsltmallarddir)" "$(DESTDIR)$(xsltmigratedir)" \
	"$(DESTDIR)$(xsltprofilingdir)" "$(DESTDIR)$(xsltrelnotesdir)" \
	"$(DESTDIR)$(xsltxhtmldir)" "$(DESTDIR)$(xsltyelpdir)"
SCRIPTS = $(dist_bin_SCRIPTS) $(dist_dapslibexec_SCRIPTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
SOURCES =
DIST_SOURCES =
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
man1dir = $(mandir)/man1
NROFF = nroff
MANS = $(dist_man1_MANS)
am__dist_catalog_DATA_DIST = catalogs/for-catalog-$(PACKAGE).xml
DATA = $(dist_catalog_DATA) $(dist_dapsconf_DATA) $(dist_dapslib_DATA) \
	$(dist_dapsmake_DATA) $(dist_doc_DATA) $(dist_emacssite_DATA) \
	$(dist_fopconf_DATA) $(dist_hyphen_DATA) $(dist_template_DATA) \
	$(dist_xepconf_DATA) $(dist_xsltcommon_DATA) \
	$(dist_xsltcontrib_DATA) $(dist_xsltdesktop_DATA) \
	$(dist_xsltepub_DATA) $(dist_xsltindex_DATA) \
	$(dist_xsltjsp_DATA) $(dist_xsltlib_DATA) \
	$(dist_xsltmallard_DATA) $(dist_xsltmigrate_DATA) \
	$(dist_xsltprofiling_DATA) $(dist_xsltrelnotes_DATA) \
	$(dist_xsltxhtml_DATA) $(dist_xsltyelp_DATA)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	cscope distdir dist dist-all distcheck
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(dist_man1_MANS) $(srcdir)/Makefile.in \
	$(top_srcdir)/doc/xml/entity-decl.ent.in AUTHORS COPYING \
	ChangeLog NEWS README TODO install-sh missing
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
GZIP_ENV = --best
DIST_ARCHIVES = $(distdir).tar.bz2
DIST_TARGETS = dist-bzip2
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BZIP = @BZIP@
CHECKBOT = @CHECKBOT@
CONVERT = @CONVERT@
CYGPATH_W = @CYGPATH_W@
DAPS_API_VERSION = @DAPS_API_VERSION@
DAPS_VERSION = @DAPS_VERSION@
DAPS_VERSION_MAJOR = @DAPS_VERSION_MAJOR@
DAPS_VERSION_MICRO = @DAPS_VERSION_MICRO@
DAPS_VERSION_MINOR = @DAPS_VERSION_MINOR@
DB4_XSLT_URL = @DB4_XSLT_URL@
DB5_XSLT_URL = @DB5_XSLT_URL@
DEBUG = @DEBUG@
DEFS = @DEFS@
DIA = @DIA@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EPUBCHECK = @EPUBCHECK@
EXIFTOOL = @EXIFTOOL@
GREP = @GREP@
GS = @GS@
HAVE_PYMOD_XML = @HAVE_PYMOD_XML@
INKSCAPE = @INKSCAPE@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
JING = @JING@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKE = @MAKE@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OPTIPNG = @OPTIPNG@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PDFFONTS = @PDFFONTS@
PDFFORMATTER = @PDFFORMATTER@
PYTHON = @PYTHON@
PYTHON_EXEC_PREFIX = @PYTHON_EXEC_PREFIX@
PYTHON_PLATFORM = @PYTHON_PLATFORM@
PYTHON_PREFIX = @PYTHON_PREFIX@
PYTHON_VERSION = @PYTHON_VERSION@
Q = @Q@
REMAKE = @REMAKE@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TAR = @TAR@
TRANG = @TRANG@
VERSION = @VERSION@
W3M = @W3M@
XFIG = @XFIG@
XMLCATALOG = @XMLCATALOG@
XMLLINT = @XMLLINT@
XSLTPROC = @XSLTPROC@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
am__leading_dot = @am__leading_dot@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
daps_xsl = @daps_xsl@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
pkgpyexecdir = @pkgpyexecdir@
pkgpythondir = @pkgpythondir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pyexecdir = @pyexecdir@
pythondir = @pythondir@
root_catalog = @root_catalog@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

#------------------------
AUTOMAKE_OPTIONS = 1.10 foreign dist-bzip2 no-dist-gzip no-installinfo \
			-Wall -Werror -Wno-portability

ACLOCAL_AMFLAGS = -I m4
SUBDIRS = 

# additional files to add to the tarball
EXTRA_DIST := COPYING-2.0 COPYING-3.0 packaging/daps.spec

#------------------------
REPL_PATH = sed \
             -e 's|@sysconfdir[@]|$(sysconfdir)|g' \
             -e 's|@bindir[@]|$(bindir)|g' \
             -e 's|@pkgdatadir[@]|$(pkgdatadir)|g' \
             -e 's|@datadir[@]|$(datadir)|g' \
             -e 's|@prefix[@]|$(prefix)|g' \
             -e 's|@PACKAGE_VERSION[@]|$(PACKAGE_VERSION)|g'

DAPS_CATALOG := catalogs/for-catalog-$(PACKAGE).xml
DAPSROOT := $(abs_top_srcdir)

# fop config
#
FOP_CONFIG := etc/fop/fop-daps.xml
FOP_CONFIG_DEFAULT := etc/fop/fop-daps.generic
@DIST_REDHAT_TRUE@FOP_CONFIG_SRC := etc/fop/fop-daps.redhat
@DIST_SUSEBS_TRUE@FOP_CONFIG_SRC := etc/fop/fop-daps.suse
@DIST_SUSE_TRUE@FOP_CONFIG_SRC := etc/fop/fop-daps.suse
@DIST_UBUNTU_TRUE@FOP_CONFIG_SRC := etc/fop/fop-daps.generic
@HAS_DAPS_XSL_FALSE@STYLEROOT := $(patsubst //%,%,$(patsubst file:%,%,$(shell $(XMLCATALOG) $(root_catalog) $(db4_xslt_url))))

# stylesheets
@HAS_DAPS_XSL_TRUE@STYLEROOT := $(daps_xsl)

# Man pages
DC_MANPAGES := DC-daps-manpages
MAN_PAGE_DIR := $(subst DC-,,$(DC_MANPAGES))
MAN_PAGES := daps.1 ccecho.1 daps-init.1 daps-susespell.1 daps-envconvert.1 daps-autobuild.1
MAN_BUILD_PATH := $(srcdir)/man/build/$(MAN_PAGE_DIR)/man/

# Manuals
DC_USERGUIDE = $(srcdir)/doc/DC-daps-user
DC_QUICKSTART = $(srcdir)/doc/DC-daps-quick
USERGUIDE_NAME = daps-user
QUICKSTART_NAME = daps-quick
USERGUIDE = $(srcdir)/doc/build/$(USERGUIDE_NAME)/single-html/$(USERGUIDE_NAME)/$(USERGUIDE_NAME).html
QUICKSTART = $(srcdir)/doc/build/$(QUICKSTART_NAME)/single-html/$(QUICKSTART_NAME)/$(QUICKSTART_NAME).html
MANUALS = $(dir $(USERGUIDE)) $(dir $(QUICKSTART)) 

#------------------------
# Installation hooks
#
dapsconfdir = @sysconfdir@/daps
fopconfdir = $(dapsconfdir)/fop
xepconfdir = $(dapsconfdir)/xep
hyphendir = $(xepconfdir)/hyphen
catalogdir = @sysconfdir@/xml
dapslibdir = $(pkgdatadir)/lib
dapslibexecdir = $(pkgdatadir)/libexec
dapsmakedir = $(pkgdatadir)/make
emacssitedir = @datadir@/emacs/site-lisp
templatedir = $(pkgdatadir)/init_templates
htmldocdir = @docdir@/html
xsltdir = $(pkgdatadir)/daps-xslt
xsltcommondir = $(xsltdir)/common
xsltcontribdir = $(xsltdir)/contrib
xsltdesktopdir = $(xsltdir)/desktop
xsltepubdir = $(xsltdir)/epub
xsltindexdir = $(xsltdir)/index
xsltjspdir = $(xsltdir)/jsp
xsltlibdir = $(xsltdir)/lib
xsltmallarddir = $(xsltdir)/mallard
xsltmigratedir = $(xsltdir)/migrate
xsltprofilingdir = $(xsltdir)/profiling
xsltrelnotesdir = $(xsltdir)/relnotes
xsltxhtmldir = $(xsltdir)/xhtml
xsltyelpdir = $(xsltdir)/yelp

#------------------------
# Automake primaries

# BIN
dist_bin_SCRIPTS = $(wildcard bin/*[^.in])
dist_dapslibexec_SCRIPTS = $(wildcard libexec/*)

# CATALOG files
@CATALOG_EDIT_FALSE@dist_catalog_DATA = $(DAPS_CATALOG)

# CONFIG files
dist_dapsconf_DATA = etc/config etc/docbook-xmlformat.conf \
			etc/CatalogManager.properties

dist_fopconf_DATA = etc/fop/fop-daps.xml
dist_xepconf_DATA = etc/xep/xep-daps.xml
dist_hyphen_DATA = $(wildcard etc/xep/hyphen/*.tex) \
			$(wildcard etc/xep/hyphen/*.il2)


# DATA
dist_dapslib_DATA = $(wildcard lib/*)
dist_emacssite_DATA = misc/docbook_macros.el
dist_dapsmake_DATA = $(wildcard make/*.mk)
dist_template_DATA = $(wildcard init_templates/*)
dist_xsltcommon_DATA = $(wildcard daps-xslt/common/*.xsl) \
			   $(wildcard daps-xslt/common/*.xml) \
			   $(wildcard daps-xslt/common/*.svg)

dist_xsltcontrib_DATA = $(wildcard daps-xslt/contrib/*.xsl)
dist_xsltdesktop_DATA = $(wildcard daps-xslt/desktop/*.xsl)
dist_xsltepub_DATA = $(wildcard daps-xslt/epub/*.xsl)
dist_xsltindex_DATA = $(wildcard daps-xslt/index/*.xsl)
dist_xsltjsp_DATA = $(wildcard daps-xslt/jsp/*.xsl)
dist_xsltlib_DATA = $(wildcard daps-xslt/lib/*.xsl)
dist_xsltmallard_DATA = $(wildcard daps-xslt/mallard/*.xsl)
dist_xsltmigrate_DATA = $(wildcard daps-xslt/migrate/*.xsl)
dist_xsltprofiling_DATA = $(wildcard daps-xslt/profiling/*.xsl)
dist_xsltrelnotes_DATA = $(wildcard daps-xslt/relnotes/*.xsl)
dist_xsltxhtml_DATA = $(wildcard daps-xslt/xhtml/*.xsl)
dist_xsltyelp_DATA = $(wildcard daps-xslt/yelp/*.xsl)

# DOCUMENTATION
dist_doc_DATA = BUGS COPYING COPYING-2.0 COPYING-3.0 INSTALL.adoc \
			README.adoc README.quickstart.adoc

dist_man1_MANS = $(addprefix $(MAN_BUILD_PATH), $(MAN_PAGES))

#---------------------------Local INSTALLATION--------------------------------
INSTALLDIRS = $(DESTDIR)$(docdir)/html $(DESTDIR)$(pkgdatadir) \
	$(DESTDIR)$(datadir)/xml/$(PACKAGE)/schema/ \
	$(DESTDIR)$(templatedir)

all: all-recursive

.SUFFIXES:
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):
doc/xml/entity-decl.ent: $(top_builddir)/config.status $(top_srcdir)/doc/xml/entity-decl.ent.in
	cd $(top_builddir) && $(SHELL) ./config.status $@
install-dist_binSCRIPTS: $(dist_bin_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-dist_binSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_bin_SCRIPTS)'; test -n "$(bindir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(bindir)'; $(am__uninstall_files_from_dir)
install-dist_dapslibexecSCRIPTS: $(dist_dapslibexec_SCRIPTS)
	@$(NORMAL_INSTALL)
	@list='$(dist_dapslibexec_SCRIPTS)'; test -n "$(dapslibexecdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(dapslibexecdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(dapslibexecdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  if test -f "$$d$$p"; then echo "$$d$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n' \
	    -e 'h;s|.*|.|' \
	    -e 'p;x;s,.*/,,;$(transform)' | sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1; } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) { files[d] = files[d] " " $$1; \
	      if (++n[d] == $(am__install_max)) { \
		print "f", d, files[d]; n[d] = 0; files[d] = "" } } \
	    else { print "f", d "/" $$4, $$1 } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	     if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	     test -z "$$files" || { \
	       echo " $(INSTALL_SCRIPT) $$files '$(DESTDIR)$(dapslibexecdir)$$dir'"; \
	       $(INSTALL_SCRIPT) $$files "$(DESTDIR)$(dapslibexecdir)$$dir" || exit $$?; \
	     } \
	; done

uninstall-dist_dapslibexecSCRIPTS:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_dapslibexec_SCRIPTS)'; test -n "$(dapslibexecdir)" || exit 0; \
	files=`for p in $$list; do echo "$$p"; done | \
	       sed -e 's,.*/,,;$(transform)'`; \
	dir='$(DESTDIR)$(dapslibexecdir)'; $(am__uninstall_files_from_dir)
install-man1: $(dist_man1_MANS)
	@$(NORMAL_INSTALL)
	@list1='$(dist_man1_MANS)'; \
	list2=''; \
	test -n "$(man1dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man1dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man1dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.1[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man1dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man1dir)" || exit $$?; }; \
	done; }

uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_man1_MANS)'; test -n "$(man1dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man1dir)'; $(am__uninstall_files_from_dir)
install-dist_catalogDATA: $(dist_catalog_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_catalog_DATA)'; test -n "$(catalogdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(catalogdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(catalogdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(catalogdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(catalogdir)" || exit $$?; \
	done

uninstall-dist_catalogDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_catalog_DATA)'; test -n "$(catalogdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(catalogdir)'; $(am__uninstall_files_from_dir)
install-dist_dapsconfDATA: $(dist_dapsconf_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_dapsconf_DATA)'; test -n "$(dapsconfdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(dapsconfdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(dapsconfdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(dapsconfdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(dapsconfdir)" || exit $$?; \
	done

uninstall-dist_dapsconfDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_dapsconf_DATA)'; test -n "$(dapsconfdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(dapsconfdir)'; $(am__uninstall_files_from_dir)
install-dist_dapslibDATA: $(dist_dapslib_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_dapslib_DATA)'; test -n "$(dapslibdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(dapslibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(dapslibdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(dapslibdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(dapslibdir)" || exit $$?; \
	done

uninstall-dist_dapslibDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_dapslib_DATA)'; test -n "$(dapslibdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(dapslibdir)'; $(am__uninstall_files_from_dir)
install-dist_dapsmakeDATA: $(dist_dapsmake_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_dapsmake_DATA)'; test -n "$(dapsmakedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(dapsmakedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(dapsmakedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(dapsmakedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(dapsmakedir)" || exit $$?; \
	done

uninstall-dist_dapsmakeDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_dapsmake_DATA)'; test -n "$(dapsmakedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(dapsmakedir)'; $(am__uninstall_files_from_dir)
install-dist_docDATA: $(dist_doc_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_doc_DATA)'; test -n "$(docdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(docdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(docdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(docdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(docdir)" || exit $$?; \
	done

uninstall-dist_docDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_doc_DATA)'; test -n "$(docdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(docdir)'; $(am__uninstall_files_from_dir)
install-dist_emacssiteDATA: $(dist_emacssite_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_emacssite_DATA)'; test -n "$(emacssitedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(emacssitedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(emacssitedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(emacssitedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(emacssitedir)" || exit $$?; \
	done

uninstall-dist_emacssiteDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_emacssite_DATA)'; test -n "$(emacssitedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(emacssitedir)'; $(am__uninstall_files_from_dir)
install-dist_fopconfDATA: $(dist_fopconf_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_fopconf_DATA)'; test -n "$(fopconfdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(fopconfdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(fopconfdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(fopconfdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(fopconfdir)" || exit $$?; \
	done

uninstall-dist_fopconfDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_fopconf_DATA)'; test -n "$(fopconfdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(fopconfdir)'; $(am__uninstall_files_from_dir)
install-dist_hyphenDATA: $(dist_hyphen_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_hyphen_DATA)'; test -n "$(hyphendir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(hyphendir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(hyphendir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(hyphendir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(hyphendir)" || exit $$?; \
	done

uninstall-dist_hyphenDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_hyphen_DATA)'; test -n "$(hyphendir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(hyphendir)'; $(am__uninstall_files_from_dir)
install-dist_templateDATA: $(dist_template_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_template_DATA)'; test -n "$(templatedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(templatedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(templatedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(templatedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(templatedir)" || exit $$?; \
	done

uninstall-dist_templateDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_template_DATA)'; test -n "$(templatedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(templatedir)'; $(am__uninstall_files_from_dir)
install-dist_xepconfDATA: $(dist_xepconf_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_xepconf_DATA)'; test -n "$(xepconfdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(xepconfdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(xepconfdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(xepconfdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(xepconfdir)" || exit $$?; \
	done

uninstall-dist_xepconfDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_xepconf_DATA)'; test -n "$(xepconfdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(xepconfdir)'; $(am__uninstall_files_from_dir)
install-dist_xsltcommonDATA: $(dist_xsltcommon_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_xsltcommon_DATA)'; test -n "$(xsltcommondir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(xsltcommondir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(xsltcommondir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(xsltcommondir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(xsltcommondir)" || exit $$?; \
	done

uninstall-dist_xsltcommonDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_xsltcommon_DATA)'; test -n "$(xsltcommondir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(xsltcommondir)'; $(am__uninstall_files_from_dir)
install-dist_xsltcontribDATA: $(dist_xsltcontrib_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_xsltcontrib_DATA)'; test -n "$(xsltcontribdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(xsltcontribdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(xsltcontribdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(xsltcontribdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(xsltcontribdir)" || exit $$?; \
	done

uninstall-dist_xsltcontribDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_xsltcontrib_DATA)'; test -n "$(xsltcontribdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(xsltcontribdir)'; $(am__uninstall_files_from_dir)
install-dist_xsltdesktopDATA: $(dist_xsltdesktop_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_xsltdesktop_DATA)'; test -n "$(xsltdesktopdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(xsltdesktopdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(xsltdesktopdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(xsltdesktopdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(xsltdesktopdir)" || exit $$?; \
	done

uninstall-dist_xsltdesktopDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_xsltdesktop_DATA)'; test -n "$(xsltdesktopdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(xsltdesktopdir)'; $(am__uninstall_files_from_dir)
install-dist_xsltepubDATA: $(dist_xsltepub_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_xsltepub_DATA)'; test -n "$(xsltepubdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(xsltepubdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(xsltepubdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(xsltepubdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(xsltepubdir)" || exit $$?; \
	done

uninstall-dist_xsltepubDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_xsltepub_DATA)'; test -n "$(xsltepubdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(xsltepubdir)'; $(am__uninstall_files_from_dir)
install-dist_xsltindexDATA: $(dist_xsltindex_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_xsltindex_DATA)'; test -n "$(xsltindexdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(xsltindexdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(xsltindexdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(xsltindexdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(xsltindexdir)" || exit $$?; \
	done

uninstall-dist_xsltindexDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_xsltindex_DATA)'; test -n "$(xsltindexdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(xsltindexdir)'; $(am__uninstall_files_from_dir)
install-dist_xsltjspDATA: $(dist_xsltjsp_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_xsltjsp_DATA)'; test -n "$(xsltjspdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(xsltjspdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(xsltjspdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(xsltjspdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(xsltjspdir)" || exit $$?; \
	done

uninstall-dist_xsltjspDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_xsltjsp_DATA)'; test -n "$(xsltjspdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(xsltjspdir)'; $(am__uninstall_files_from_dir)
install-dist_xsltlibDATA: $(dist_xsltlib_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_xsltlib_DATA)'; test -n "$(xsltlibdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(xsltlibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(xsltlibdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(xsltlibdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(xsltlibdir)" || exit $$?; \
	done

uninstall-dist_xsltlibDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_xsltlib_DATA)'; test -n "$(xsltlibdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(xsltlibdir)'; $(am__uninstall_files_from_dir)
install-dist_xsltmallardDATA: $(dist_xsltmallard_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_xsltmallard_DATA)'; test -n "$(xsltmallarddir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(xsltmallarddir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(xsltmallarddir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(xsltmallarddir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(xsltmallarddir)" || exit $$?; \
	done

uninstall-dist_xsltmallardDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_xsltmallard_DATA)'; test -n "$(xsltmallarddir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(xsltmallarddir)'; $(am__uninstall_files_from_dir)
install-dist_xsltmigrateDATA: $(dist_xsltmigrate_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_xsltmigrate_DATA)'; test -n "$(xsltmigratedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(xsltmigratedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(xsltmigratedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(xsltmigratedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(xsltmigratedir)" || exit $$?; \
	done

uninstall-dist_xsltmigrateDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_xsltmigrate_DATA)'; test -n "$(xsltmigratedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(xsltmigratedir)'; $(am__uninstall_files_from_dir)
install-dist_xsltprofilingDATA: $(dist_xsltprofiling_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_xsltprofiling_DATA)'; test -n "$(xsltprofilingdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(xsltprofilingdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(xsltprofilingdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(xsltprofilingdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(xsltprofilingdir)" || exit $$?; \
	done

uninstall-dist_xsltprofilingDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_xsltprofiling_DATA)'; test -n "$(xsltprofilingdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(xsltprofilingdir)'; $(am__uninstall_files_from_dir)
install-dist_xsltrelnotesDATA: $(dist_xsltrelnotes_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_xsltrelnotes_DATA)'; test -n "$(xsltrelnotesdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(xsltrelnotesdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(xsltrelnotesdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(xsltrelnotesdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(xsltrelnotesdir)" || exit $$?; \
	done

uninstall-dist_xsltrelnotesDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_xsltrelnotes_DATA)'; test -n "$(xsltrelnotesdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(xsltrelnotesdir)'; $(am__uninstall_files_from_dir)
install-dist_xsltxhtmlDATA: $(dist_xsltxhtml_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_xsltxhtml_DATA)'; test -n "$(xsltxhtmldir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(xsltxhtmldir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(xsltxhtmldir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(xsltxhtmldir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(xsltxhtmldir)" || exit $$?; \
	done

uninstall-dist_xsltxhtmlDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_xsltxhtml_DATA)'; test -n "$(xsltxhtmldir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(xsltxhtmldir)'; $(am__uninstall_files_from_dir)
install-dist_xsltyelpDATA: $(dist_xsltyelp_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_xsltyelp_DATA)'; test -n "$(xsltyelpdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(xsltyelpdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(xsltyelpdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(xsltyelpdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(xsltyelpdir)" || exit $$?; \
	done

uninstall-dist_xsltyelpDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_xsltyelp_DATA)'; test -n "$(xsltyelpdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(xsltyelpdir)'; $(am__uninstall_files_from_dir)

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)
dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-recursive
all-am: Makefile $(SCRIPTS) $(MANS) $(DATA) all-local
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(dapslibexecdir)" "$(DESTDIR)$(man1dir)" "$(DESTDIR)$(catalogdir)" "$(DESTDIR)$(dapsconfdir)" "$(DESTDIR)$(dapslibdir)" "$(DESTDIR)$(dapsmakedir)" "$(DESTDIR)$(docdir)" "$(DESTDIR)$(emacssitedir)" "$(DESTDIR)$(fopconfdir)" "$(DESTDIR)$(hyphendir)" "$(DESTDIR)$(templatedir)" "$(DESTDIR)$(xepconfdir)" "$(DESTDIR)$(xsltcommondir)" "$(DESTDIR)$(xsltcontribdir)" "$(DESTDIR)$(xsltdesktopdir)" "$(DESTDIR)$(xsltepubdir)" "$(DESTDIR)$(xsltindexdir)" "$(DESTDIR)$(xsltjspdir)" "$(DESTDIR)$(xsltlibdir)" "$(DESTDIR)$(xsltmallarddir)" "$(DESTDIR)$(xsltmigratedir)" "$(DESTDIR)$(xsltprofilingdir)" "$(DESTDIR)$(xsltrelnotesdir)" "$(DESTDIR)$(xsltxhtmldir)" "$(DESTDIR)$(xsltyelpdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
@CATALOG_EDIT_FALSE@uninstall-local:
clean: clean-recursive

clean-am: clean-generic clean-local mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -f Makefile
distclean-am: clean-am distclean-generic distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am: install-data-local install-dist_catalogDATA \
	install-dist_dapsconfDATA install-dist_dapslibDATA \
	install-dist_dapsmakeDATA install-dist_docDATA \
	install-dist_emacssiteDATA install-dist_fopconfDATA \
	install-dist_hyphenDATA install-dist_templateDATA \
	install-dist_xepconfDATA install-dist_xsltcommonDATA \
	install-dist_xsltcontribDATA install-dist_xsltdesktopDATA \
	install-dist_xsltepubDATA install-dist_xsltindexDATA \
	install-dist_xsltjspDATA install-dist_xsltlibDATA \
	install-dist_xsltmallardDATA install-dist_xsltmigrateDATA \
	install-dist_xsltprofilingDATA install-dist_xsltrelnotesDATA \
	install-dist_xsltxhtmlDATA install-dist_xsltyelpDATA \
	install-man

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-dist_binSCRIPTS \
	install-dist_dapslibexecSCRIPTS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man: install-man1

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-dist_binSCRIPTS uninstall-dist_catalogDATA \
	uninstall-dist_dapsconfDATA uninstall-dist_dapslibDATA \
	uninstall-dist_dapslibexecSCRIPTS uninstall-dist_dapsmakeDATA \
	uninstall-dist_docDATA uninstall-dist_emacssiteDATA \
	uninstall-dist_fopconfDATA uninstall-dist_hyphenDATA \
	uninstall-dist_templateDATA uninstall-dist_xepconfDATA \
	uninstall-dist_xsltcommonDATA uninstall-dist_xsltcontribDATA \
	uninstall-dist_xsltdesktopDATA uninstall-dist_xsltepubDATA \
	uninstall-dist_xsltindexDATA uninstall-dist_xsltjspDATA \
	uninstall-dist_xsltlibDATA uninstall-dist_xsltmallardDATA \
	uninstall-dist_xsltmigrateDATA \
	uninstall-dist_xsltprofilingDATA \
	uninstall-dist_xsltrelnotesDATA uninstall-dist_xsltxhtmlDATA \
	uninstall-dist_xsltyelpDATA uninstall-local uninstall-man

uninstall-man: uninstall-man1

.MAKE: $(am__recursive_targets) install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am all-local \
	am--refresh check check-am clean clean-cscope clean-generic \
	clean-local cscope cscopelist-am ctags ctags-am dist dist-all \
	dist-bzip2 dist-gzip dist-lzip dist-shar dist-tarZ dist-xz \
	dist-zip distcheck distclean distclean-generic distclean-tags \
	distcleancheck distdir distuninstallcheck dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-data-local install-dist_binSCRIPTS \
	install-dist_catalogDATA install-dist_dapsconfDATA \
	install-dist_dapslibDATA install-dist_dapslibexecSCRIPTS \
	install-dist_dapsmakeDATA install-dist_docDATA \
	install-dist_emacssiteDATA install-dist_fopconfDATA \
	install-dist_hyphenDATA install-dist_templateDATA \
	install-dist_xepconfDATA install-dist_xsltcommonDATA \
	install-dist_xsltcontribDATA install-dist_xsltdesktopDATA \
	install-dist_xsltepubDATA install-dist_xsltindexDATA \
	install-dist_xsltjspDATA install-dist_xsltlibDATA \
	install-dist_xsltmallardDATA install-dist_xsltmigrateDATA \
	install-dist_xsltprofilingDATA install-dist_xsltrelnotesDATA \
	install-dist_xsltxhtmlDATA install-dist_xsltyelpDATA \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-man1 install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-generic pdf \
	pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-dist_binSCRIPTS uninstall-dist_catalogDATA \
	uninstall-dist_dapsconfDATA uninstall-dist_dapslibDATA \
	uninstall-dist_dapslibexecSCRIPTS uninstall-dist_dapsmakeDATA \
	uninstall-dist_docDATA uninstall-dist_emacssiteDATA \
	uninstall-dist_fopconfDATA uninstall-dist_hyphenDATA \
	uninstall-dist_templateDATA uninstall-dist_xepconfDATA \
	uninstall-dist_xsltcommonDATA uninstall-dist_xsltcontribDATA \
	uninstall-dist_xsltdesktopDATA uninstall-dist_xsltepubDATA \
	uninstall-dist_xsltindexDATA uninstall-dist_xsltjspDATA \
	uninstall-dist_xsltlibDATA uninstall-dist_xsltmallardDATA \
	uninstall-dist_xsltmigrateDATA \
	uninstall-dist_xsltprofilingDATA \
	uninstall-dist_xsltrelnotesDATA uninstall-dist_xsltxhtmlDATA \
	uninstall-dist_xsltyelpDATA uninstall-local uninstall-man \
	uninstall-man1

.PRECIOUS: Makefile


#---------------------------Local TARGETS--------------------------------------

#
# These targets need to be build _after_ the guides have been build, to make sure
# the local config, as provided by the repo, is used. Otherwise we have a mixture
# of system and repo setup and that will not work

bin/daps etc/config $(FOP_CONFIG): $(USERGUIDE) $(QUICKSTART) $(dist_man1_MANS)

all-local: $(USERGUIDE) $(QUICKSTART) $(dist_man1_MANS) $(DAPS_CATALOG)

$(INSTALLDIRS):
	test -z "$@" || $(MKDIR_P) $@

install-data-local: $(INSTALLDIRS) autobuild/daps-autobuild
install-data-local: TMP_CATALOG := $(shell mktemp -q catalogs/catalog.XXXXX)
install-data-local:
	for BOOK in $(MANUALS); do \
	  tar c --mode=u+w,go+r-w,a-s -C $$BOOK . | \
		(cd $(DESTDIR)$(docdir)/html; tar xp); \
	done
	install -m755 autobuild/daps-autobuild $(DESTDIR)$(bindir)
	install -m644 autobuild/daps-autobuild.rnc $(DESTDIR)$(datadir)/xml/$(PACKAGE)/schema/
	install -m644 autobuild/daps-autobuild.xml $(DESTDIR)$(templatedir)
# create entry in xml root catalog
@CATALOG_EDIT_TRUE@	{ \
@CATALOG_EDIT_TRUE@	  sed '/<\/catalog>/d' $(root_catalog); \
@CATALOG_EDIT_TRUE@	  $(XMLLINT) --nocatalogs --format $(DAPS_CATALOG) | \
@CATALOG_EDIT_TRUE@	    awk '/<\/catalog>/{next} s == 1 {print} /<catalog/{s=1} \
@CATALOG_EDIT_TRUE@	      END{print "</catalog>"}'; \
@CATALOG_EDIT_TRUE@	} >$(TMP_CATALOG)
@CATALOG_EDIT_TRUE@	chmod --reference=$(root_catalog) $(TMP_CATALOG)
@CATALOG_EDIT_TRUE@	mv $(TMP_CATALOG) $(root_catalog)

#---------------------------Local UNINSTALL-----------------------------------
@CATALOG_EDIT_TRUE@uninstall-local: TMP_CATALOG := $(shell mktemp -q catalogs/catalog.XXXXX)
@CATALOG_EDIT_TRUE@uninstall-local:
@CATALOG_EDIT_TRUE@	$(XMLLINT) --nocatalogs --format $(root_catalog) | \
@CATALOG_EDIT_TRUE@	  awk "/<\/group>/ && s == 1 {s=0;next} s == 1 {next} /<group id=\"$(PACKAGE)\">/{s=1;next} {print}" > $(TMP_CATALOG)
@CATALOG_EDIT_TRUE@	chmod --reference=$(root_catalog) $(TMP_CATALOG)
@CATALOG_EDIT_TRUE@	mv $(TMP_CATALOG) $(root_catalog)
#-----------------------------CLEAN--------------------------------------------
clean-local:
	rm -rf $(srcdir)/man/build/ $(srcdir)/doc/build/ \
	  $(srcdir)/.firstbuild $(dir $(DAPS_CATALOG)) $(srcdir)/bin/daps \
	  $(srcdir)/etc/config $(srcdir)/etc/fop/fop-daps.xml \
	  $(srcdir)/doc/xml/entity-decl.ent
	(cd $(srcdir)/etc && ln -sf config.in config)
	(cd $(srcdir)/bin && ln -sf daps.in daps)
	(cd $(srcdir)/autobuild && ln -sf daps-autobuild.in daps-autobuild)
	(cd $(srcdir)/etc/fop && ln -sf fop-daps.suse fop-daps.xml)
	(cd doc/xml && ln -sf entity-decl.ent.in entity-decl.ent)

#-----------------------------DAPS--------------------------------------------

# create temporary DAPS catalog entries file
$(DAPS_CATALOG): DAPS_PROFDIR := $(pkgdatadir)/daps-xslt/profiling
$(DAPS_CATALOG): URN_SUSE     := urn:x-suse:xslt:profiling
$(DAPS_CATALOG): URN_DAPS     := urn:x-daps:xslt:profiling
$(DAPS_CATALOG): DB_VERSIONS  := 41 42 43 44 45 50 51
$(DAPS_CATALOG):
	$(Q)test -z "$(dir $@)" || $(MKDIR_P) $(dir $@)
	$(Q)$(XMLCATALOG) --noout --create $@
	$(Q)for VERS in $(DB_VERSIONS); do \
	  $(XMLCATALOG) --noout --add \
	  "system" "$(URN_DAPS):docbook$${VERS}-profile.xsl" \
	  "file://$(DAPS_PROFDIR)/docbook$${VERS}-profile.xsl" $@; \
	  $(XMLCATALOG) --noout --add \
	  "system" "$(URN_SUSE):docbook$${VERS}-profile.xsl" \
	  "file://$(DAPS_PROFDIR)/docbook$${VERS}-profile.xsl" $@; \
	done
	$(Q)$(XMLCATALOG) --noout --add \
	  "system" "$(URN_DAPS):novdoc-profile.xsl" \
	  "file://$(DAPS_PROFDIR)/novdoc-profile.xsl" $@
	$(Q)$(XMLCATALOG) --noout --add \
	  "system" "$(URN_SUSE):novdoc-profile.xsl" \
	  "file://$(DAPS_PROFDIR)/novdoc-profile.xsl" $@
	$(Q)$(XMLCATALOG) --noout --add "rewriteSystem" \
	  "http://daps.sourceforge.net/release/daps-xsl/current/" \
	  "file://$(pkgdatadir)/daps-xslt/" $@
	$(Q)$(XMLCATALOG) --noout --add "rewriteSystem" \
	  "https://opensuse.github.io/daps/release/daps-xsl/current/" \
	  "file://$(pkgdatadir)/daps-xslt/" $@
	$(Q)$(SED) -i '/^<!DOCTYPE .*>$$/d' $@
	$(Q)$(SED) -i '/<catalog/a\ <group id="$(PACKAGE)">' $@
	$(Q)$(SED) -i '/<\/catalog/i\ </group>' $@
	$(Q)$(srcdir)/bin/ccecho "result" "Created $@"

# the SVN sources contain links bin/daps, etc/config and $(FOP_CONFIG)
# These need to be replaced by real files/different links created by
# the respective targets below.
# To make sure they are rebuild at least once when make is called for
# the first time, we make them depend on a file we create first
# This file will be newer than the existing links and thus the targets
# will be rebuild.
# This helps to avoid PHONY targets which would be called with every single
# make call (even make clean) - something we definetely would like to avoid

.firstbuild:
	touch $@

# see http://www.gnu.org/software/autoconf/manual/autoconf.html#Installation-Directory-Variables
bin/daps: .firstbuild
	if [ -L $@ ]; then rm -f $@; fi
	$(REPL_PATH) $@.in > $@
	chmod +x $@

etc/config: .firstbuild
	if [ -L $@ ]; then rm -f $@; fi
	$(REPL_PATH) $@.in > $@

autobuild/daps-autobuild: .firstbuild
	if [ -L $@ ]; then rm -f $@; fi
	$(REPL_PATH) $@.in > $@
	chmod +x $@

# Create the FOP config file. RedHat and SUSE require a special version
# (see FOP_CONFIG_SRC definitions above)
$(FOP_CONFIG): $(FOP_CONFIG_SRC) $(FOP_CONFIG_DEFAULT) .firstbuild
	if test -n "$(FOP_CONFIG_SRC)"; then \
	  ln -sf $(notdir $(FOP_CONFIG_SRC)) $@; \
	else \
	  ln -sf $(notdir $(FOP_CONFIG_DEFAULT)) $@; \
	fi

$(USERGUIDE):
	$(Q)bin/daps $(DEBUG) --dapsroot=$(DAPSROOT) --styleroot=$(STYLEROOT) \
	    --docconfig=$(DC_USERGUIDE) html --single --name=$(USERGUIDE_NAME)
	$(Q)$(srcdir)/bin/ccecho "result" "Created $@"

$(QUICKSTART):
	$(Q)bin/daps $(DEBUG) --dapsroot=$(DAPSROOT)  --styleroot=$(STYLEROOT) \
	    --docconfig=$(DC_QUICKSTART) html --single --name=$(QUICKSTART_NAME)
	$(Q)$(srcdir)/bin/ccecho "result" "Created $@"

# Generate man pages on the fly
$(dist_man1_MANS):
	$(Q)bin/daps $(DEBUG) --dapsroot=$(DAPSROOT) --color=0 \
	  --docconfig=$(DAPSROOT)/man/$(DC_MANPAGES) man --nogzip
	$(Q)$(srcdir)/bin/ccecho "result" "Created man pages $@"

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
