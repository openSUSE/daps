<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet
 href="urn:x-daps:xslt:profiling:docbook45-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.docbook.org/xml/4.5/docbookx.dtd"
[<!ENTITY % entities SYSTEM "entity-decl.ent">
%entities;
]>
<chapter id="cha.daps.user.review">
 <title>Review process</title>
 <abstract>
  <para>
   This chapter describes how to simplify the review process with &dapsacr;, 
   either by including remarks or draft watermarks in the output, 
   or by transforming the multiple DocBook files in your project into 
   one big XML file.
  </para>
 </abstract>
 <sect1 id="sec.daps.user.review.output.special">
  <title>Including remarks and draft watermarks in the output</title>

  <para>
   &dapsacr; offers several features to simplify the review process. For example, 
   you can insert <sgmltag>remark</sgmltag> elements in the source code 
   (for editorial remarks or questions to the proofreader)
   and generate an output format that shows or hides these remarks. 
   You can also generate preview versions of your documentation with a 
   <literal>DRAFT</literal> watermark appearing on the HTML or PDF output.
  </para>

&daps-note-output-adv;
 
  <para>
   Find a few example commands below:
  </para>

  <variablelist>
   <varlistentry>
    <term>Including remarks in the output</term>
    <listitem>
     <screen>&prompt.user;&dapscmd; -d&nbsp;<replaceable>PATH_TO_&dc;_FILE</replaceable> pdf --remarks</screen>
     &daps-output-remarks;
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Building PDFs with a <literal>DRAFT</literal> watermark</term>
    <listitem>
     <screen>&prompt.user;&dapscmd; -d&nbsp;<replaceable>PATH_TO_&dc;_FILE</replaceable> pdf --draft</screen>
     <para>
      Generates a PDF that has a <literal>DRAFT</literal> watermark printed
      on each page.
     </para>
    </listitem>
   </varlistentry>
   </variablelist>
 </sect1>
 <sect1 id="sec.daps.user.review.bigfile">
  <title>Creating XML big files</title>

  <para> Instead of sending multiple XML files to a proofreader for review, you can transform all
   files included in your <sgmltag>book</sgmltag> or <sgmltag>set</sgmltag> into one huge DocBook
   XML file (big file). Use the following command: </para>

  <screen>&prompt.user;&dapscmd; -d <replaceable>PATH_TO_&dc;_FILE</replaceable> bigfile</screen>
  <para> &dapsacr; resolves all XIncludes (replaces them with the referenced content) to create
   the big file. A message is shown where to find the generated output. </para>

  <para>
   Sometimes error messages point to a line containing an
   <sgmltag>&lt;xi:include/&gt;</sgmltag> tag and the real error is hidden
   somewhere inside the included file. Using the option
   <option>--novalid</option> allows you to build and validate a single XML
   file where error messages point to their occurrences in the big file. Use
   the following command as an example:
  </para>

  <screen>&prompt.user;&dapscmd; -d&nbsp;<replaceable>PATH_TO_&dc;_FILE</replaceable> bigfile --novalid</screen>
</sect1>
 </chapter>
