<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet
 href="urn:x-daps:xslt:profiling:docbook45-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE appendix PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.docbook.org/xml/4.5/docbookx.dtd"
[<!ENTITY % entities SYSTEM "entity-decl.ent">
%entities;
]>
<appendix id="app.daps.user.editors">
 <title>Editor-specific information</title>
 <abstract>
  <para>
   This chapter covers the following topics:
   <itemizedlist>
    <listitem>
     <para>
      Visual Studio Code extensions: run &dapsacr; commands, check style and add snippets 
     </para>
    </listitem>
    <listitem>
     <para>
      Editing XML/DocBook files with Vim
     </para>
    </listitem>
    <listitem>
     <para>
      Using DocBook macros for Emacs
     </para>
    </listitem>
   </itemizedlist>
  </para>
 </abstract>
 
<sect1 id="sec.daps.user.editors.vscode">
<title>Visual Studio Code extensions: check spelling and style, run &dapsacr; commands and add snippets</title>
<itemizedlist>
      <listitem>
            <para>
            The suse-vale-styleguide extension incorporates Vale VSCode linter rules
            (spelling, style and grammar) along with specific guidance from the SUSE Documentation Style Guide.
            For more information, refer to
            <ulink url="https://github.com/openSUSE/vscode-suse-vale-styleguide"></ulink>.     
            </para>
      </listitem>
      <listitem>
            <para>
            The vscode-daps extension makes it easier to run selected &dapsacr; commands
            from the VSCode editor. For details, see
            <ulink url="https://github.com/openSUSE/vscode-daps"></ulink>.</para>
      </listitem>
      <listitem>
            <para>
            The docbook-snippets extension includes templates of both simple and complex
            DocBook structures. You can populate the templates by pressing the initial DocBook
            markup letters. For example, pressing <emphasis>li</emphasis> results in
            &lt;listitem&gt;insert content&lt;/listitem&gt;. For more details, see
            <ulink url="https://github.com/openSUSE/vscode-docbook-snippets"></ulink>.
            </para>
      </listitem>
</itemizedlist>
</sect1>

 <sect1 id="sec.daps.user.editors.vi">
  <title>Editing XML/DocBook files with Vim</title>
  <para>The vim-daps plug-in brings &dapsacr; command functionality to the Vim editor
      when editing XML/DocBook files. After installing it, you can validate DocBook sources,
      build HTML or PDF targets, format the source XML and much more. You can also customize
      the plug-in with multiple options to make editing XML files easier.
      For details, refer to <ulink url="https://github.com/tbazant/xml-vim"></ulink>.</para>
 </sect1>

 <sect1 id="sec.daps.user.editors.emacs.macros">
      <title>Emacs&mdash;macros for inserting DocBook elements</title>
      <para>
       Most editors allow you to write or record macros that you can use for
       automatically inserting <quote>skeletons</quote> for complex XML
       constructs as illustrated by <xref linkend="ex.daps.user.vle"/>.
      </para>
          <example id="ex.daps.user.vle">
       <title>A <sgmltag>varlistentry</sgmltag> element</title>
    <screen>&lt;varlistentry&gt;
     &lt;term&gt;&lt;/term&gt;
      &lt;listitem&gt;
       &lt;para&gt;&lt;/para&gt;
      &lt;/listitem&gt;
     &lt;/varlistentry&gt;</screen>
      </example>
          <para>
       &dapsacr; comes with macros for the Emacs editor that can be used to add
       DocBook elements, such as <sgmltag>listitem</sgmltag>,
       <sgmltag>figure</sgmltag>, or <sgmltag>indexterm</sgmltag>. The macros are
       stored in <filename>docbook_macros.el</filename> and are added to your
       system during the installation of &dapsacr;. They require that you use one
       of Emacs' main XML editing modes, either <literal>nxml</literal> or
       <literal>psgml</literal>.
      </para>
          <procedure id="pro.daps.emacs.macros.config">
       <title>Configuring Emacs for using the DocBook macros</title>
       <step>
        <para>
         To load the DocBook macros, open your Emacs customization file
         (<filename>~/.emacs</filename> or <filename>~/.gnu-emacs</filename>).
        </para>
       </step>
       <step>
        <para>
         Insert the following line:
        </para>
    <screen>(load "/usr/share/emacs/site-lisp/docbook_macros.el" t t)</screen>
       </step>
       <step>
        <para>
         Save the Emacs customization file and restart Emacs.
        </para>
       </step>
      </procedure>
          <para>
       For an overview of the available macros and their usage, refer to
       <ulink url="http://en.opensuse.org/openSUSE:Documentation_Emacs_Docbook_Macros"></ulink>.
      </para>
     </sect1>
</appendix>
